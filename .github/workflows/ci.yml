name: BloodMoney CI
on:
  push:
    paths:
      - '**ci.yml'
      - '**/Config/**'
      - '**/Content/**'
      - '**/Source/**'
  pull_request:
    paths:
      - '**ci.yml'
      - '**/Config/**'
      - '**/Content/**'
      - '**/Source/**'

permissions:
  contents: read

jobs:
  windows:
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.cfg.platform }}-(${{ matrix.cfg.target_name }}-${{ matrix.cfg.config }})
      cancel-in-progress: true
    strategy:
      fail-fast: false # Don't cancel other matrix jobs if one fails
      matrix:
        cfg:
        - { config: Development, os: [self-hosted, Windows, X64], platform: 'Win64', ue_path: 'C:\UE_5.5', target_name: 'untitledfightgame', project_file: 'untitledfightgame.uproject' }
        - { config: Shipping, os: [self-hosted, Windows, X64], platform: 'Win64', ue_path: 'C:\UE_5.5', target_name: 'untitledfightgame', project_file: 'untitledfightgame.uproject', extra_flags: '-distribution -nodebuginfo -compressed -SkipCookingEditorContent' }
    name: "Windows ${{ matrix.cfg.config }}"
    runs-on: ${{ matrix.cfg.os }}
    steps:
      - name: Checkout Game
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: main

      - name: Pre-Cleanup exports Folder
        shell: pwsh
        run: 'if (Test-Path -path exports) { rm -r exports }'

      - name: Build Project
        shell: pwsh
        run: '${{ matrix.cfg.ue_path }}\Engine\Build\BatchFiles\RunUAT.bat BuildCookRun -project="${{ github.workspace }}\main\${{ matrix.cfg.project_file }}" -nop4 -platform=${{ matrix.cfg.platform }} -unrealexe="${{ matrix.cfg.ue_path }}\Engine\Binaries\Win64\UnrealEditor.exe" -utf8output -nocompileeditor -skipbuildeditor -cook -target=${{ matrix.cfg.target_name }} -installed -build -stage -pak -archive -iostore -prereqs -clientconfig=${{ matrix.cfg.config }} -serverconfig=${{ matrix.cfg.config }} ${{ matrix.cfg.extra_flags }} -archivedirectory="${{ github.workspace }}\exports" -nocompile -nocompileuat'

      - name: Upload Exported Game
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: "${{ matrix.cfg.target_name }} - ${{ matrix.cfg.platform }} ${{ matrix.cfg.config }}"
          path: '${{ github.workspace }}\exports'

      - name: Cleanup exports Folder
        shell: pwsh
        run: 'if (Test-Path -path exports) { rm -r exports }'
  
  linux:
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.cfg.platform }}-(${{ matrix.cfg.target_name }}-${{ matrix.cfg.config }})
      cancel-in-progress: true
    name: "Linux ${{ matrix.cfg.config }}"
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false # Don't fail everything if one fails. We want to test each OS/Compiler individually
      matrix:
        cfg:
          - { config: Development, os: [self-hosted, Linux, X64], platform: 'Linux', ue_path: '/home/unreal/UE55', target_name: 'untitledfightgame', project_file: 'untitledfightgame.uproject' }
          - { config: Shipping, os: [self-hosted, Linux, X64], platform: 'Linux', ue_path: '/home/unreal/UE55', target_name: 'untitledfightgame', project_file: 'untitledfightgame.uproject', extra_flags: '-distribution -nodebuginfo -compressed -SkipCookingEditorContent' }
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - name: Checkout Game
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: main

      - name: Create exports Folder
        run: rm -rf exports && mkdir exports

      - name: Build Project
        run: /usr/bin/env -- "${{ matrix.cfg.ue_path }}/Engine/Build/BatchFiles/RunUAT.sh" BuildCookRun -project="${{ github.workspace }}/main/${{ matrix.cfg.project_file }}" -nop4 -platform=${{matrix.cfg.platform}} -unrealexe="${{ matrix.cfg.ue_path }}/Engine/Binaries/Linux/UnrealEditor" -utf8output -nocompileeditor -skipbuildeditor -cook -target=${{ matrix.cfg.target_name }} -installed -build -stage -pak -archive -iostore -prereqs -clientconfig=${{ matrix.cfg.config }} -serverconfig=${{ matrix.cfg.config }} ${{ matrix.cfg.extra_flags }} -archivedirectory="${{ github.workspace }}/exports -nocompile -nocompileuat"

      - name: Upload Exported Game
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: "${{ matrix.cfg.target_name }} - ${{ matrix.cfg.platform }} ${{ matrix.cfg.config }}"
          path: '${{ github.workspace }}/exports'

      - name: Cleanup exports Folder
        run: rm -rf exports
